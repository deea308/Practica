@using OnlineBookStore_Entities
@using OnlineBookstore.ViewModels
@model Book

<div class="reviews-panel">
    <h3 class="fw-bold mb-3">Recenzii și comentarii</h3>

    @{
        var reviews = Model.Reviews ?? new List<Review>();
        var hasReviews = reviews.Any();
        var avg = hasReviews ? reviews.Average(r => r.Rating) : 0;
    }

    @if (hasReviews)
    {
        <div class="card shadow-sm mb-3">
            <div class="card-body d-flex align-items-center gap-2">
                <div class="fs-5">
                    @for (int i = 1; i <= 5; i++)
                    {
                        <span>@(i <= Math.Round(avg) ? "★" : "☆")</span>
                    }
                </div>
                <div class="text-muted">(@avg.ToString("0.0") din 5)</div>
            </div>
        </div>
    }

    @* Reviews list / empty state *@
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            @if (!hasReviews)
            {
                <div class="text-muted">Nu există recenzii pentru acest produs.</div>
            }
            else
            {
                <ul class="list-unstyled mb-0">
                    @foreach (var r in reviews.OrderByDescending(r => r.ReviewId))
                    {
                        <li class="mb-3 pb-3 border-bottom">
                            <div class="d-flex align-items-center gap-2">
                                <div class="stars fs-5">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        <span>@(i <= r.Rating ? "★" : "☆")</span>
                                    }
                                </div>
                                <div class="small text-muted">
                                    de @r.User?.Username ?? "Anonim"
                                </div>
                            </div>
                            <div class="mt-2">@r.Content</div>
                        </li>
                    }
                </ul>
            }
        </div>
    </div>

    <h6 class="fw-bold mb-2">Adaugă o recenzie</h6>

    @if (!(User?.Identity?.IsAuthenticated ?? false))
    {
        <div class="card shadow-sm">
            <div class="card-body text-muted">
                Trebuie să te autentifici pentru a adăuga comentarii/recenzii.
            </div>
        </div>
    }
    else
    {
        <div class="card shadow-sm">
            <div class="card-body">
                <form asp-controller="Reviews" asp-action="Create" method="post" class="d-grid gap-3">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="BookId" value="@Model.BookId" />

                    <div>
                        <label class="form-label mb-1">Acordă o notă</label>
                        <div class="star-rating">
                            @for (int i = 5; i >= 1; i--)
                            {
                                <input type="radio" id="star-@i" name="Rating" value="@i" />
                                <label for="star-@i" title="@i stele">★</label>
                            }
                        </div>
                    </div>

                    <div>
                        <label class="form-label mb-1" for="Content">Comentariul tău</label>
                        <textarea id="Content" name="Content" rows="4" class="form-control"
                              placeholder="Scrie aici părerea ta despre produs..."></textarea>
                    </div>

                    <div>
                        <button type="submit" class="btn btn-dark">Trimite recenzia</button>
                    </div>
                </form>
            </div>
        </div>
    }
</div>

<style>
    .reviews-panel .card {
        border-radius: 12px;
    }

    .reviews-panel .stars span {
        line-height: 1;
    }

    .star-rating {
        display: inline-flex;
        flex-direction: row-reverse;
    }

        .star-rating input {
            display: none;
        }

        .star-rating label {
            font-size: 1.6rem;
            cursor: pointer;
            padding: 0 .15rem;
            filter: grayscale(100%);
            opacity: .5;
            transition: transform .05s, opacity .15s;
        }

            .star-rating input:checked ~ label,
            .star-rating label:hover,
            .star-rating label:hover ~ label {
                filter: none;
                opacity: 1;
                transform: scale(1.05);
            }
</style>
