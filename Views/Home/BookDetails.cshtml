@model OnlineBookStore_Entities.Book
@using OnlineBookStore_Entities
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<div class="container-xxl mt-3">
    <div class="row g-4">
        <!-- LEFT: Cover + Book details -->
        <div class="col-lg-7">
            <div class="row g-3 align-items-start">
                <!-- Cover -->
                <div class="col-md-5">
                    <img src="@(string.IsNullOrWhiteSpace(Model.CoverImagePath) ? "/img/placeholder-book.png" : Model.CoverImagePath)"
                         alt="@Model.Title cover"
                         class="img-fluid rounded shadow-sm"
                         style="width:100%;max-height:420px;object-fit:cover;" />
                </div>

                <!-- Details -->
                <div class="col-md-7">
                    <h2 class="mb-3">@Model.Title</h2>

                    <dl class="row mb-0">
                        <dt class="col-sm-4">Publisher:</dt>
                        <dd class="col-sm-8">@Model.Publisher?.Name</dd>

                        <dt class="col-sm-4">Author:</dt>
                        <dd class="col-sm-8">@Model.Author?.Name</dd>

                        <dt class="col-sm-4">Description:</dt>
                        <dd class="col-sm-8">@Model.Description</dd>

                        <dt class="col-sm-4">Price:</dt>
                        <dd class="col-sm-8">@Model.Price</dd>
                    </dl>

                    <form asp-action="AddToCart" method="post" class="mt-3">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="bookId" value="@Model.BookId" />
                        <button type="submit" class="btn btn-primary">Add to Cart</button>
                    </form>
                </div>
            </div>
        </div>

        <!-- RIGHT: Reviews panel -->
        <div class="col-lg-5">
            <div class="reviews-panel">
                <h3 class="fw-bold mb-3">Reviews &amp; Comments</h3>

                @{
                    var reviews = Model.Reviews ?? new List<Review>();
                    var hasReviews = reviews.Any();
                    var avg = hasReviews ? reviews.Average(r => r.Rating) : 0;
                }

                @if (hasReviews)
                {
                    <div class="card shadow-sm mb-3">
                        <div class="card-body d-flex align-items-center gap-2">
                            <div class="fs-5">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    <span>@(i <= Math.Round(avg) ? "★" : "☆")</span>
                                }
                            </div>
                            <div class="text-muted">(@avg.ToString("0.0") out of 5, @reviews.Count reviews)</div>
                        </div>
                    </div>
                }

                <div class="card shadow-sm mb-4">
                    <div class="card-body">
                        @if (!hasReviews)
                        {
                            <div class="text-muted">There are no reviews for this product.</div>
                        }
                        else
                        {
                            <ul class="list-unstyled mb-0">
                                @foreach (var r in reviews.OrderByDescending(r => r.ReviewId))
                                {
                                    <li class="mb-3 pb-3 border-bottom">
                                        <div class="d-flex align-items-center gap-2">
                                            <div class="stars fs-5">
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    <span>@(i <= r.Rating ? "★" : "☆")</span>
                                                }
                                            </div>
                                            <div class="small text-muted">by @(r.User?.Username ?? "Anonymous")</div>
                                        </div>
                                        <div class="mt-2">@r.Content</div>
                                    </li>
                                }
                            </ul>
                        }
                    </div>
                </div>

                <h6 class="fw-bold mb-2">Add a review</h6>

                @if (!(User?.Identity?.IsAuthenticated ?? false))
                {
                    <div class="card shadow-sm">
                        <div class="card-body text-muted">
                            You need to sign in to add comments/reviews.
                        </div>
                    </div>
                }
                else
                {
                    <div class="card shadow-sm">
                        <div class="card-body">
                            <form asp-controller="Reviews" asp-action="Create" method="post" class="d-grid gap-3">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="BookId" value="@Model.BookId" />

                                <div>
                                    <label class="form-label mb-1">Give a rating</label>
                                    <div class="star-rating">
                                        @for (int i = 5; i >= 1; i--)
                                        {
                                            <input type="radio" id="star-@i" name="Rating" value="@i" required />
                                            <label for="star-@i" title="@i stars">★</label>
                                        }
                                    </div>
                                    <div class="small text-muted mt-1" id="ratingValue" aria-live="polite"></div>
                                </div>

                                <div>
                                    <label class="form-label mb-1" for="Content">Your comment</label>
                                    <textarea id="Content" name="Content" rows="4" class="form-control"
                                          placeholder="Write your thoughts about the product..." required></textarea>
                                </div>

                                <div>
                                    <button type="submit" class="btn btn-dark">Submit review</button>
                                </div>
                            </form>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<style>
    .reviews-panel .card {
        border-radius: 12px;
    }

    .reviews-panel .stars span {
        line-height: 1;
    }

    .star-rating {
        display: inline-flex;
        flex-direction: row-reverse;
    }

        .star-rating input {
            display: none;
        }

        .star-rating label {
            font-size: 1.8rem;
            cursor: pointer;
            padding: 0 .15rem;
            filter: grayscale(100%);
            opacity: .5;
            transition: transform .05s, opacity .15s;
        }

            .star-rating input:checked ~ label,
            .star-rating label:hover,
            .star-rating label:hover ~ label {
                filter: none;
                opacity: 1;
                transform: scale(1.05);
            }

            .star-rating label:focus {
                outline: 2px solid #333;
                outline-offset: 2px;
            }
</style>

<script>
    document.addEventListener('change', function (e) {
        if (e.target && e.target.name === 'Rating') {
            const out = document.getElementById('ratingValue');
            if (out) out.textContent = `${e.target.value}/5`;
        }
    });
</script>
